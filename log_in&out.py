# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestLoginlogout():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_loginlogout(self):
    # Test name: login_logout
    # Step # | name | target | value
    # 1 | open | https://skoolgo.pixelmindit.com:8000/#/ | 
    self.driver.get("https://skoolgo.pixelmindit.com:8000/#/")
    # 2 | setWindowSize | 820x731 | 
    self.driver.set_window_size(820, 731)
    # 3 | click | id=userName | 
    self.driver.find_element(By.ID, "userName").click()
    # 4 | type | id=userName | krishnaeerhs@gmail.com
    self.driver.find_element(By.ID, "userName").send_keys("krishnaeerhs@gmail.com")
    # 5 | click | id=password | 
    self.driver.find_element(By.ID, "password").click()
    # 6 | type | id=password | Gymnago
    self.driver.find_element(By.ID, "password").send_keys("Gymnago")
    # 7 | click | css=.btn-primary | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary").click()
    # 8 | mouseOver | css=.btn-primary | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".btn-primary")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 9 | mouseOut | css=.btn-primary | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 10 | click | css=.pageBreadCrumbs | 
    self.driver.find_element(By.CSS_SELECTOR, ".pageBreadCrumbs").click()
    # 11 | click | css=.user | 
    self.driver.find_element(By.CSS_SELECTOR, ".user").click()
    # 12 | click | css=.ml-1 > small | 
    self.driver.find_element(By.CSS_SELECTOR, ".ml-1 > small").click()
  
